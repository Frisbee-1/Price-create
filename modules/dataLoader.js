// üîß dataLoader.js
// –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞ –∏ –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É

import { showUnmatched, createMaterialRow, recalculate } from "./pricing.js";
import { normalizeName } from "./utils.js";
import { renderSynonymEditor } from "./editor.js";
import { saveToServer } from "./server.js";

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
export let synonyms = {};
export let markupMap = {};
export let materials = [];

// ========================
// 1. –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò
// ========================

function updateMaterialsFromDOM() {
  materials = Array.from(document.querySelectorAll("#priceTable tbody tr"))
    .filter((tr) => tr.dataset.name)
    .map((tr) => ({
      name: tr.dataset.name,
      isGroup: tr.dataset.group === "true",
    }));
}

function updateMarkupMapFromDOM() {
  markupMap = {};
  document
    .querySelectorAll("#priceTable tbody tr:not([data-group='true'])")
    .forEach((tr) => {
      const name = tr.dataset.name;
      const markup = parseFloat(tr.querySelector(".markup")?.value);
      if (name && !isNaN(markup)) {
        markupMap[name] = markup;
      }
    });
}

function updatePricesFromDOM() {
  const prices = {};
  document
    .querySelectorAll("#priceTable tbody tr:not([data-group='true'])")
    .forEach((tr) => {
      const name = tr.dataset.name;
      const price = parseFloat(tr.querySelector(".price-in")?.textContent);
      if (name && !isNaN(price)) {
        prices[name] = price;
      }
    });
  return prices;
}

// ========================
// 2. –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–•
// ========================

export function loadData() {
  console.log("üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞");

  return fetch("http://localhost:3001/api/data")
    .then((res) => {
      if (!res.ok) throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${res.status}`);
      return res.json();
    })
    .then((data) => {
      console.log("üì• –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:", data);

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
      const uniqueMaterials = [];
      const seenNames = new Set();

      data.materials.forEach((item) => {
        const normName = normalizeName(item.name);
        if (!seenNames.has(normName)) {
          seenNames.add(normName);
          uniqueMaterials.push(item);
        }
      });

      // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
      materials = uniqueMaterials;
      synonyms = data.synonyms || {};
      markupMap = data.markupMap || {};

      // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ç–∞–±–ª–∏—Ü—ã
      const tableBody = document.querySelector("#priceTable tbody");
      if (tableBody) {
        tableBody.innerHTML = "";
        materials.forEach((item) => {
          const enrichedItem = {
            ...item,
            priceIn: data.prices?.[item.name] || 0,
            markup: data.markupMap?.[item.name] || 0,
          };
          createMaterialRow(enrichedItem);
        });
      }

      return data;
    })
    .catch((err) => {
      console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", err);
      throw err;
    });
}

// ========================
// 3. –û–ë–†–ê–ë–û–¢–ö–ê EXCEL
// ========================

export function handleFile(event) {
  console.log("üì• handleFile –≤—ã–∑–≤–∞–Ω, —Ñ–∞–π–ª:", event?.target?.files?.[0]);
  if (!event?.target?.files?.[0]) {
    console.error("‚ùå –§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω");
    return;
  }

  const reader = new FileReader();
  reader.onload = function (e) {

    try {
      // –ü–∞—Ä—Å–∏–Ω–≥ Excel
      const data = new Uint8Array(e.target.result);
      const workbook = XLSX.read(data, { type: "array" });
      const json = XLSX.utils.sheet_to_json(
        workbook.Sheets[workbook.SheetNames[0]]
      );
      console.log("‚úÖ –§–∞–π–ª Excel –ø—Ä–æ—á–∏—Ç–∞–Ω:", json);

      // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
      const existingNames = materials.map((m) => normalizeName(m.name));
      window.tempExcelData = json.filter((row) => {
        try {
          const rowName = normalizeName(
            row["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ"] || row["Item Name"]
          );
          const exists = existingNames.includes(rowName); // üí• –í–û–¢ –≠–¢–û –ù–£–ñ–ù–û –î–û–ë–ê–í–ò–¢–¨

          console.log("üîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ:", {
            –∏—Å—Ö–æ–¥–Ω–æ–µ: row["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ"] || row["Item Name"],
            –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ: rowName,
            —É–∂–µ–ï—Å—Ç—å: exists,
          });

          return rowName && !exists;
        } catch (error) {
          console.error("‚ùå –û—à–∏–±–∫–∞ –≤ filter:", error, "‚Üí —Å—Ç—Ä–æ–∫–∞:", row);
          return false;
        }
      });
console.log("üß© –°—Ç—Ä–æ–∫–∏ –∏–∑ Excel (tempExcelData):", window.tempExcelData);
      // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π
      const unmatchedList = document.getElementById("unmatchedList");
      if (unmatchedList) {
        unmatchedList.innerHTML = "";
        window.tempExcelData.forEach((row) => {
          console.log("üîç –ö–ª—é—á–∏ —Å—Ç—Ä–æ–∫–∏ –∏–∑ Excel:", Object.keys(row)); // üëà –≤—Å—Ç–∞–≤—å —Å—é–¥–∞
          const name = row["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ"] || row["Item Name"];// –ï—Å–ª–∏ –≤ –∫–æ–ª–æ–Ω–∫—É –¥–æ–±–∞–≤–ª—è–µ–º –¥—Ä—É–≥–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ, —Ç–æ –µ–≥–æ –Ω—É–∂–Ω–æ –ø—Ä–æ–ø–∏—Å–∞—Ç—å —Ç—É—Ç
          console.log("üéØ –î–æ–±–∞–≤–ª—è–µ–º –≤ unmatchedList:", name);
          handleUnmatchedMaterial(name, unmatchedList);
        });

      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞:", error);
      alert("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç.");
    }
  };
  reader.readAsArrayBuffer(event.target.files[0]);
}

// ========================
// 4. –ù–ï–ó–ê–ì–†–£–ñ–ï–ù–ù–´–ï –¶–ï–ù–´
// ========================

export function handleUnmatchedMaterial(name, container) {
  // üéØ –°–æ–∑–¥–∞—ë–º –æ–±—ë—Ä—Ç–∫—É –¥–ª—è —Å—Ç—Ä–æ–∫–∏ unmatched –º–∞—Ç–µ—Ä–∏–∞–ª–∞
  const div = document.createElement("div"); // <div class="unmatched-row">
  div.className = "unmatched-row";

  // üè∑Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
  const span = document.createElement("span");
  span.textContent = name;

  // ‚ûï –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å"
  const addBtn = document.createElement("button");
  addBtn.type = "button"; // —á—Ç–æ–±—ã –Ω–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–ª submit
  addBtn.className = "add-btn";
  addBtn.textContent = "–î–æ–±–∞–≤–∏—Ç—å";

  // üìã –ö–Ω–æ–ø–∫–∞ "–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å"
  const copyBtn = document.createElement("button");
  copyBtn.type = "button";
  copyBtn.className = "copy-btn";
  copyBtn.textContent = "–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å";

  // ‚ùå –ö–Ω–æ–ø–∫–∞ "–£–¥–∞–ª–∏—Ç—å"
  const removeBtn = document.createElement("button");
  removeBtn.type = "button";
  removeBtn.className = "remove-btn";
  removeBtn.innerHTML = "‚úï";

  // üìé –í—Å—Ç–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏ —Ç–µ–∫—Å—Ç –≤ —Å—Ç—Ä–æ–∫—É
  div.append(span, addBtn, copyBtn, removeBtn);

  // üîò –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å"
  addBtn.addEventListener("click", (e) => {
    console.log("üëÜ –ö–Ω–æ–ø–∫–∞ –î–û–ë–ê–í–ò–¢–¨ –Ω–∞–∂–∞—Ç–∞"); // ‚úÖ –¥–æ–ª–∂–Ω–∞ –ø–æ—è–≤–∏—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑

    e.preventDefault(); // –±–ª–æ–∫–∏—Ä—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
    e.stopPropagation(); // –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ
    e.stopImmediatePropagation(); // –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–ª–æ–∫–∏—Ä—É–µ–º –≤–Ω–µ—à–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏

    setTimeout(async () => {
      try {
        console.log("üü° –î–û–ë–ê–í–õ–ï–ù–ò–ï –ú–ê–¢–ï–†–ò–ê–õ–ê: –∑–∞–ø—É—Å–∫–∞–µ–º setTimeout");

        // üîç –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ Excel
        const excelItem = window.tempExcelData?.find(
          (item) => normalizeName(item["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ"]) === normalizeName(name)
        );

        // üß± –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–∞
        const newItem = {
          name: name, // –ù–∞–∑–≤–∞–Ω–∏–µ
          isGroup: false, // –≠—Ç–æ –æ–±—ã—á–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª
          priceIn: excelItem ? parseFloat(excelItem["–¶–µ–Ω–∞ –≤—Ö–æ–¥"]) : 0, // –¶–µ–Ω–∞ –≤—Ö–æ–¥
        };

        materials.push(newItem); // ‚ûï –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ–±—â–∏–π –º–∞—Å—Å–∏–≤
        createMaterialRow(newItem); // üß± –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –≤ —Ç–∞–±–ª–∏—Ü—É
        await updateAndSave(); // üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö - –∫–æ–≥–¥–∞ –∑–∞–∫–æ–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª —ç—Ç—É —Å—Ç—Ä–æ–∫—É, –ø–æ—Å–ª–µ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–µ—Ä–µ—Å—Ç–∞–ª–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è
        div.remove(); // üßπ –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –∏–∑ unmatched - –∏–∑ –∑–∞–≥—Ä—É–∂–∞–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –î–æ–±–∞–≤–∏—Ç—å

        console.log(
          "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏ —É–±–∏—Ä–∞–µ–º –±–ª–æ–∫."
        );
      } catch (err) {
        console.error(
          "‚ùå –û—à–∏–±–∫–∞ –≤–Ω—É—Ç—Ä–∏ setTimeout –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞:",
          err
        );
      }
    }, 0);

    return false; // –µ—â—ë –æ–¥–Ω–∞ –∑–∞—â–∏—Ç–∞ –æ—Ç submit
  });

  // üìã –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å"
  copyBtn.addEventListener("click", (e) => {
    e.preventDefault();
    e.stopPropagation();
    navigator.clipboard.writeText(name); // –ö–æ–ø–∏—Ä—É–µ–º –∏–º—è –≤ –±—É—Ñ–µ—Ä
  });

  // ‚ùå –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–£–¥–∞–ª–∏—Ç—å"
  removeBtn.addEventListener("click", (e) => {
    e.preventDefault();
    e.stopPropagation();
    div.remove(); // –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
  });

  // üì• –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç—É —Å—Ç—Ä–æ–∫—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä unmatched
  container.appendChild(div);
}

// ========================
// 5. –°–û–•–†–ê–ù–ï–ù–ò–ï –î–ê–ù–ù–´–•
// ========================

function updateAndSave() {
  console.log("üõ† updateAndSave –≤—ã–∑–≤–∞–Ω");
  updateMaterialsFromDOM();
  updateMarkupMapFromDOM();
  const prices = updatePricesFromDOM();
  console.log("‚û°Ô∏è updateAndSave: –≤—ã–∑—ã–≤–∞–µ—Ç saveToServer");
  saveToServer(materials, synonyms, prices, markupMap)
    .then(() => {
      console.log("‚úÖ updateAndSave: saveToServer –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ");
    })
    .catch((error) => {
      console.error(
        "‚ùå updateAndSave: saveToServer –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π:",
        error
      );
    });
  console.log("‚û°Ô∏è updateAndSave: –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ");
}

// ========================
// 6. –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
// ========================

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏
window.loadData = loadData;
window.handleFile = handleFile;

// –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Ü–µ–Ω–∫–∏
document
  .getElementById("tableBody") // ‚ú®
  .addEventListener("input", (e) => {
    // ‚ú®
    if (e.target.classList.contains("markup")) {
      recalculate(e.target); // –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Ü–∏—Ñ—Ä—ã
      updateAndSave(); // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    }
  });

console.log("‚úÖ dataLoader.js –∑–∞–≥—Ä—É–∂–µ–Ω");

export { updateAndSave };
